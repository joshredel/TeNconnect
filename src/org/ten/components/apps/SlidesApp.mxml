<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:components="org.ten.components.*" 
					xmlns:mx="library://ns.adobe.com/flex/mx" 
					width="1570" height="1080">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.core.DragSource;
			import mx.events.DragEvent;
			import mx.managers.DragManager;
			
			import org.ten.DataShop;
			import org.ten.components.SlideItemRenderer;
			import org.ten.vo.Directory;
			import org.ten.vo.Slide;
			
			[Bindable]
			/**
			 * The app's data shop.
			 */
			private var dataShop:DataShop = DataShop.instance;
			
			/**
			 * The function to be called to bring the user back home.
			 */
			public var homeFunction:Function;
			
			[Embed(source='assets/images/mail.png')]
			/**
			 * The image we use to represent dragging a slide to be mailed.
			 */
			public var mailIcon:Class;
			
			/**
			 * Calls the function that brings the user home.
			 */
			private function goHome():void {
				try {
					homeFunction();
				} catch(e:Error) {
					trace("No home function defined...");
				}
			}
			
			/**
			 * Starts the drag and drop action on a Slide object
			 */
			private function doDrag(event:MouseEvent):void {
				// get the slide image that we started to drag from
				var targetImage:Image = event.currentTarget as Image;	
				
				// create a drag indicator image
				var dragImage:Image = new Image();
				dragImage.source = mailIcon;
				dragImage.width = 150;
				dragImage.smoothBitmapContent = true;
				
				// create a drag source to hold the data being sent
				var dragSource:DragSource = new DragSource();
				dragSource.addData(slidesList.selectedItem, 'data');
				
				// start the drag
				DragManager.doDrag(targetImage, dragSource, event, dragImage, event.localX - 75, event.localY - 75, 1);
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" horizontalAlign="center" gap="0">
		<!-- Horizontal list of slides -->
		<s:List id="slidesList" width="100%" itemRenderer="org.ten.components.SlideItemRenderer" 
				dataProvider="{new ArrayCollection(dataShop.slideService.getSlides.lastResult)}"
				interactionMode="touch">
			<s:layout>
				<s:HorizontalLayout gap="40" />
			</s:layout>
		</s:List>
		
		<!-- Visual break between list and large slide view -->
		<s:Rect width="100%" height="4" >
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
		<mx:Spacer height="35" />
		
		<!-- Large slide view -->
		<s:HGroup height="100%" verticalAlign="middle" gap="25">
			<s:BorderContainer width="150" height="150" backgroundColor="0x1FB4EC">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center" />
				</s:layout>
				<s:Label text="&lt;" fontSize="100" click="(slidesList.selectedIndex > 0 ? slidesList.selectedIndex-- : slidesList.selectedIndex = 0)" />
			</s:BorderContainer>
			
			<mx:Image source="{slidesList.selectedItem.url}" width="1165" height="728" mouseDown="doDrag(event)"/>
			
			<s:BorderContainer width="150" height="150" backgroundColor="0x1FB4EC">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center" />
				</s:layout>
				<s:Label text="&gt;" fontSize="100" click="slidesList.selectedIndex++" />
			</s:BorderContainer>
		</s:HGroup>
	</s:VGroup>
	
	<components:HomeButton click="goHome()" />
</s:NavigatorContent>
